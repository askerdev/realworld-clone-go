meta {
  name: Login and Remember Token
  type: http
  seq: 3
}

post {
  url: {{APIURL}}/users/login
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  X-Requested-With: XMLHttpRequest
}

body:json {
  {"user":{"email":"{{EMAIL}}", "password":"{{PASSWORD}}"}}
}

tests {
  var responseJSON = JSON.parse(responseBody);
  
  test("Response contains "user" property", function() { expect(Boolean(responseJSON.hasOwnProperty('user'))).to.be.true; });
  
  var user = responseJSON.user || {};
  
  test("User has "email" property", function() { expect(Boolean(user.hasOwnProperty('email'))).to.be.true; });
  test("User has "username" property", function() { expect(Boolean(user.hasOwnProperty('username'))).to.be.true; });
  test("User has "bio" property", function() { expect(Boolean(user.hasOwnProperty('bio'))).to.be.true; });
  test("User has "image" property", function() { expect(Boolean(user.hasOwnProperty('image'))).to.be.true; });
  test("User has "token" property", function() { expect(Boolean(user.hasOwnProperty('token'))).to.be.true; });
  
  if(tests['User has "token" property']){
      bru.setGlobalEnvVar('token', user.token);
  }
  
  test("Global variable "token" has been set", function() { expect(Boolean(bru.getGlobalEnvVar('token') === user.token)).to.be.true; });
  
}
